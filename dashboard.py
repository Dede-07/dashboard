import streamlit as st
import pandas as pd
import plotly.express as px

# Carregar dados
df = pd.read_excel("bancoGAMES.xlsx")

st.set_page_config(page_title="Dashboard Estat√≠stica üéÆ", page_icon = "üìä", layout="wide")

# Fun√ß√£o para mostrar o dashboard
def show_dashboard():
    st.title("Dashboard de Consoles de Videogame üéÆ")
    
    # Criar duas colunas para exibir os gr√°ficos de forma mais organizada
    col1, col2 = st.columns(2)

    # Gr√°fico 1: Unidades vendidas por console (na primeira coluna)
    with col1:
        df_sorted_consoles = df.sort_values(by='UNIDADES VENDIDAS', ascending=False)
        top_10_consoles = df_sorted_consoles.head(10)
        fig1 = px.bar(top_10_consoles, x='UNIDADES VENDIDAS', y='CONSOLE', orientation='h', 
                      title="Top 10 Consoles Mais Vendidos")
        fig1.update_yaxes(categoryorder='total ascending')  
        st.plotly_chart(fig1, use_container_width=True)

    # Gr√°fico 2: Faturamento por Empresa (na segunda coluna)
    with col2:
        df_grouped = df.groupby('EMPRESA')['FATURAMENTO'].sum().reset_index()
        df_sorted = df_grouped.sort_values(by='FATURAMENTO', ascending=False)
        df_sorted['FATURAMENTO_FORMATADO'] = df_sorted['FATURAMENTO'].apply(lambda x: f'{x/1e9:.2f}B' if x >= 1e9 else f'{x/1e6:.2f}M')
        
        fig2 = px.bar(df_sorted, x='EMPRESA', y='FATURAMENTO', title="Faturamento por Empresa (em $)", text=df_sorted['FATURAMENTO_FORMATADO'])
        st.plotly_chart(fig2, use_container_width=True)

    # Segunda linha com gr√°ficos lado a lado
    col3, col4 = st.columns(2)

    # Gr√°fico 3: Unidades vendidas ao longo dos anos (na primeira coluna)
    with col3:
        df_preco_medio = df.groupby('EMPRESA')['PRE√áO INICIAL'].mean().reset_index()
        df_preco_medio = df_preco_medio.sort_values('PRE√áO INICIAL', ascending=False)
        fig3 = px.bar(df_preco_medio, x='EMPRESA', y='PRE√áO INICIAL', title="Pre√ßo Inicial M√©dio por Empresa (em $)", text_auto='.2s')
        st.plotly_chart(fig3, use_container_width=True)

    # Gr√°fico 4: Distribui√ß√£o dos Tipos de Console (na segunda coluna)
    with col4:
        fig4 = px.histogram(df, x='TIPO', title="Quantidade de Vendas por Tipos de Consoles")
        st.plotly_chart(fig4, use_container_width=True)

    # Gr√°ficos na linha inferior
    col5, col6 = st.columns(2)

    # Gr√°fico 5: Pre√ßo inicial m√©dio por empresa (na primeira coluna)
    with col5:
        df_grouped_tipo_empresa = df.groupby(['EMPRESA', 'TIPO'])['UNIDADES VENDIDAS'].sum().reset_index()
        df_grouped_tipo_empresa = df_grouped_tipo_empresa.sort_values('UNIDADES VENDIDAS', ascending=False)
        fig5 = px.bar(df_grouped_tipo_empresa, x='EMPRESA', y='UNIDADES VENDIDAS', color='TIPO',
                      title="Unidades Vendidas por Tipo de Console e Empresa", text_auto='.2s')
        st.plotly_chart(fig5, use_container_width=True)

    # Gr√°fico 6: Ano de lan√ßamento vs. descontinua√ß√£o (na segunda coluna)
    with col6:
        df_grouped_tipo_faturamento = df.groupby('TIPO')['FATURAMENTO'].sum().reset_index()
        df_grouped_tipo_faturamento = df_grouped_tipo_faturamento.sort_values('FATURAMENTO', ascending=False)
        df_grouped_tipo_faturamento['FATURAMENTO'] = df_grouped_tipo_faturamento['FATURAMENTO'] / 1e9
        fig6 = px.bar(df_grouped_tipo_faturamento, x='TIPO', y='FATURAMENTO', 
                      title="Faturamento por Tipo de Console", text_auto='.2s')
        fig6.update_layout(yaxis_title="Faturamento (Bilh√µes)")
        st.plotly_chart(fig6, use_container_width=True)

    # Fonte do Dashboard
    st.write("Feito por: Andr√©, Arthur e Lucas üéÆ")

# Fun√ß√£o para mostrar o banco de dados
def show_database():
    st.title("Banco de Dados de Consoles üìä")
    st.write("Aqui est√£o os dados do Excel carregados:")

    # Exibindo o DataFrame
    st.dataframe(df)

    st.markdown("‚û°Ô∏è [Visualizar o arquivo no excel]( https://docs.google.com/spreadsheets/d/1dMITLQojncXc6F8RNfCfSRDvKznxNpdl/edit?usp=sharing&ouid=101200214570574763659&rtpof=true&sd=true)")

def show_sobreAula():
    st.title("Dados Quantitativos para contas üìà")
    st.write("Aqui est√£o os dados quantitativos onde foram feitos esses c√°lculos:")

    # Selecionando as colunas quantitativas
    df_quantitativo = df[['UNIDADES VENDIDAS', 'PRE√áO INICIAL', 'FATURAMENTO']]
    st.dataframe(df_quantitativo)

    st.subheader("M√©dia, Mediana, Moda, Desvio Padr√£o e Coeficiente de Varia√ß√£o por Coluna:")

    for coluna in df_quantitativo.columns:
        st.write(f"Coluna - **{coluna}:**")
        
        # M√©dia
        media = df_quantitativo[coluna].mean()
        st.write(f"M√©dia: {media:,.2f}")
        
        # Mediana
        mediana = df_quantitativo[coluna].median()
        st.write(f"Mediana: {mediana:,.2f}")
        
        # Moda
        moda = df_quantitativo[coluna].mode()[0]
        st.write(f"Moda: {moda:,.2f}")
        
        # Desvio Padr√£o
        desvio_padrao = df_quantitativo[coluna].std()
        st.write(f"Desvio Padr√£o: {desvio_padrao:,.2f}")

        # Coeficiente de Varia√ß√£o (Desvio Padr√£o / M√©dia)
        coef_variacao = (desvio_padrao / media) * 100
        st.write(f"Coeficiente de Varia√ß√£o: {coef_variacao:,.2f} %")

        st.write("---") 


# Menu de navega√ß√£o
menu = st.sidebar.selectbox("Escolha a p√°gina", ("Dashboard üì∂", "Sobre as aulas ‚úçüèº","Banco de Dados üìà"))

# Navega√ß√£o entre as p√°ginas
if menu == "Dashboard üì∂":
    show_dashboard()
elif menu == "Banco de Dados üìà":
    show_database()
elif menu == "Sobre as aulas ‚úçüèº":
    show_sobreAula()
